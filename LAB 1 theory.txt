
======================
Openstack Train

Module 

	CL110  ==> Basic Level (Total 14 chapters)
	CL210  ==> AdvanceLevel (Total 10 chapters)

	       ==> 2-3 etra chapter to cover


======================

Official book ====> Hard copy
		   Soft copy (official site)

Book on Openstack v10 or v13


======================

Cerfication Duration  ==> 4 Hours ==> Practical Hands on Test


======================

Design Prepration Dummy Labs

======================


Exam Concept

CL -110 - First Book ==> 60%
CL -210 - Second Book ==> 40%

======================

Content : Theory Session + Practical Session
		30%		70%
======================

Lab Option:

1. Office Inhouse lab - Demo or Practice
2. Personal Laptop - 
	(RAM-8GB) 
	(Disk Space 70GB)
	(Processor i3,i5,i7)

3. Here 8 GB RAM ==> 70% course will cover of CL110
	(Design Single Node) ==> Most Practical ll be cover

	(Multi Node Setup) ==> Live Infra <== Ready Infra


4. Design Center Lab / or Cloud Demand

======================

Red Hat OpenStack Administration I: 
-----------------------------------
	Core Operations for Domain Operators (CL110) Training


	Duration: 5 days
	Language: English
	Level: Intermediate




======================
docs.redhat.com

https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10


======================




======================

Essential skills covered in the course include the following:

	• Launch instances to satisfy various use case examples.
	• Manage domains, projects, users, roles, and quota in a multitenant environment.
	• Manage networks, subnets, routers, and floating IP addresses.
	• Manage instance security with group rules and access keys.
	• Create and manage block, object, and shared storage within OpenStack.
	• Perform instance launch customization with cloud-init.


======================

Details Course Information
-----------------------------
	• Module 1: Introduction to Red Hat OpenStack Platform
	• Module 2: Manage application projects in a multitenant cloud
	• Module 3: Manage OpenStack networking
	• Module 4: Configure resources to launch a non-public instance
	• Module 5: Configure virtual machine system disks
	• Module 6: Provide additional storage strategies
	• Module 7: Configure resources to launch an instance with public access
	• Module 8: Automate customized cloud application launches
	• Module 9: Manage cloud application placement


======================



CL110 V10 - Red Hat OpenStack Administration I
-----------------------------------------------
● Introduce launching an instance
	○ Launch an instance and describe the OpenStack architecture and use cases.
● Organize people and resources
	○ Manage projects, users, roles, and quotas.
● Describe cloud computing
	○ Describe the changes in technology and processes for cloud computing.
● Manage Linux networks
	○ Administer Linux networks and bridges.
● Prepare to deploy an instance with public access
	○ Manage images, flavors, and private networks in preparation for launching
	an instance.
● Deploy an instance
	○ Launch and verify an instance.
● Manage block storage
	○ Manage ephemeral and persistent block storage.
● Manage object storage
	○ Administer object storage.
● Prepare to deploy an external instance
	○ Manage external networks and security in preparation for launching an
	instance with public access.
● Deploy an instance with public access
	○ Launch and verify an instance with public access.
● Customize instances
	○ Customize an instance with cloud-init.
● Deploy scalable stacks
	○ Deploy a stack and configure autoscaling.
● Install an OpenStack overcloud
	○ Install an OpenStack proof of concept using the director UI and provisioning
	service templates.
● Lab: Comprehensive review of CL110
	○ Review tasks in the Red Hat OpenStack Administration I: Core Operations for
	Cloud Operators course.






======================
What are the agenda?
---------------
	Cloud ?

	Cloud Computing ?

	Before cloud , how we work?

	After cloud, what is market changes?

	Features of Cloud Computing?

	What are the requirement of cloud based infra?

	Why we deploy openstack in any organization?



======================


Cloud ?
	Physical resource that cannot see
	Cloud is Datacentere
	CPU RAM HD N/W
	


	
Cloud Computing ?
	Its a model
	IAAS, SAAD, PAAS
	public private hybrid
	a service in IT infra
	
	a model that to be implemented as app, os, libraries, runtime
	
	SCALABLE


Before cloud , how we work?
	bare matel virtuizations
	2010 nasa and rackspace found Openstack
	resource tightly coupled
	resource overprovison/ underprovisoon
	one app bind one singe H/W resource

	Office ==> Project ==> admin ==> machine
		hardware configuration
		OS
		application
		vendor
		liscinecing cost		
		deploy
		testing
		handover
				take more time for planning




After cloud, what is market changes?
	on demand resouce allocation
	current 8GB(RAM)  ===> 4 sec (UP ==> 16GB (UP)

	busineess need
		agile, cost optimization
		effeciency, microservice
		HW independent
		pay as u go
	better resorce consumption
	market spike learn.

	EX on company
		Infra > Service > Hardware > OS > Service > Planning > testing
		
		Now this modes make faster workflow in comapany
		or in industry
		
		better solution and better planning, fast product delivery

	fast > SCALE IN and SCALE OUT
		
		



Features of Cloud Computing?





What are the requirement of cloud based infra?

Why we deploy openstack in any organization?





======================
The NIST Definition of Cloud Computing

https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-145.pdf

https://www.govinfo.gov/app/details/GOVPUB-C13-74cdc274b1109a7e1ead7185dfec2ada#:~:text=Cloud%20computing%20is%20a%20model,effort%20or%20service%20provider%20interaction.



Essential Characteristics:
-----------------------------
	On-demand self-service
	Resource pooling
	Rapid elasticity
	Measured service
	Scalabiity
	Telemetry




	Shared Pool
		Single HW fells and used by single user, 
		but actually shared by multiple user.




	Single-tanency
		Single HW for sigle user or single project or single company.



	Multitanency
		Single HW for multiple user or multiple project or multiple company.
		No backend dependency
		
		backend layer/ user or client layer	


		example
			20 floor house >> 1 floor / 2 floor ../5 floor
			selling as rent >> tenent
			
			bill (quota) of > electricity > water
			reffered as QUOTA LIMIT 








Proof of concept ==> check google

======================

Scnerio 

	XYZ datacenter >> hardware own >> admin own 
		planning team own >> life cycle team own 
		R n D team own > vendor other
				[OS vendor + service vendor ]
					redhat OS + oenstack + nagios + inhouse service


	

======================
Why we deploy openstack in any organization?

======================






======================
The primary difference between horizontal scaling and vertical scaling 
is that horizontal scaling involves adding more machines or nodes to a 
system, while vertical scaling involves adding more 
power (CPU, RAM, storage, etc.) to an existing machine. 


In other words, horizontal scaling involves scaling out, while vertical 
scaling involves scaling up. Horizontal scaling is typically used to 
handle increasing amounts of traffic or workload, while vertical scaling 
is typically used to handle resource-intensive tasks or applications that 
require more processing power.


======================























======================
Types of Service Models:



	Software as a Service (SaaS)
	Platform as a Service (PaaS)
	Infrastructure as a Service (IaaS)






Software as a Service (SaaS)
	App => Browser


Platform as a Service (PaaS)





Infrastructure as a Service (IaaS)



Database as a Service (DaaS) - ORACLE :)





======================
Private coud	
	Oracle, single orgnizatin
	manage on premise or off premise

Public cloud
	AWS

Hybrid cloud
	mixed

======================

What is Openstack?
	set of service(or component added) to established in a node.

	Openstack >> IaaS

	Openshift >> PaaS


======================

Openstack release

https://releases.openstack.org/

Austin (2010.1)
Bexar (2011.1)
Cactus (2011.2)
Diablo (2011.3)
Essex (2012.1)
Folsom (2012.2)
Grizzly (2013.1)
Havana (2013.2)
Icehouse (2014.1)
Juno (2014.2)
Kilo (2015.1)
Liberty (2015.2)
Mitaka (2016.1)
Newton (2016.2)
Ocata (2017.1)
Pike (2017.2)
Queens (2018.1)
Rocky (2018.2)
Stein (2019.1)
Train (2019.2)
Ussuri (2020.1)
Victoria (2020.2)
Wallaby (2021.1)



Red Hat had certifications for OpenStack versions such as 
Red Hat OpenStack Platform 13, 16, and 17






======================

What are the components of Openstack?


			Horizon (dashboard)
				^
				||
Nova > Glance > Swift > Neutron > Cinder > Heat > Ceilometer > Keystone
----------------------------primary component -------------------------





Mandatory ( Horizon(keystone), gance, Nova, neutron, cinder)



Horizon		GUI interface
Keystone	Identity Service
Nova 		Compute Service
Glance		Image Service
Neutron		Networking Service
Cinder		Block Storage
Swift		Object Storage
Ceilometer	Telemetry
Heat		Orchesstration









Horizon: 
	Horizon is the web-based dashboard for OpenStack. 
	It provides a graphical user interface (GUI) for 
	managing and provisioning resources in an OpenStack 
	cloud environment.



Keystone: Keystone is the identity service. 
	It provides authentication and authorization services
	for other OpenStack services, allowing users to 
	securely authenticate and access resources based on 
	their roles and permissions.



Nova: 
	Nova is the compute service in OpenStack. 
	It manages the lifecycle of instances, providing 
	the ability to launch, terminate, and manage virtual
	machines (VMs) on a hypervisor.


Glance: 
	Glance is the image service. 
	It manages virtual machine images, providing a 
	catalog and repository for storing, discovering, 
	and retrieving images used to create instances.
	Contain minimum required software , including 
	a bootable OS.


Swift: 
	Swift is the object storage service. 
	It provides scalable and redundant storage for 
	static data, such as images, backups, and other 
	unstructured data.



Neutron: 
	Neutron is the networking service that provides 
	networking capabilities to other OpenStack services. 
	It allows users to create and manage networks, 
	routers, subnets, and other networking resources.



Cinder: 
	Cinder is the block storage service. 
	It provides persistent block storage to VMs in 
	OpenStack, allowing users to create, attach, and 
	detach block storage volumes to instances.



Heat: 
	Heat is the orchestration service. 
	It allows users to define and manage infrastructure 
	as code using templates, automating the deployment 
	and scaling of resources in response to application 
	requirements.


Ceilometer:
	Ceilometer is the telemetry service. 
	It collects and processes data related to cloud 
	usage, performance, and billing, providing metering 
	and monitoring capabilities for resource management 
	and optimization.




Aodh: 
	Aodh is the alarming service. 
	It provides capabilities for defining and managing 
	alarms based on telemetry data collected by 
	Ceilometer, allowing users to set thresholds and 
	trigger actions in response to specific events.


Trove: 
	Trove is the database service. 
	It provides database-as-a-service (DBaaS) functionality, 
	allowing users to easily provision and manage 
	relational and non-relational database instances 
	in an OpenStack environment.


Sahara: 
	Sahara is the data processing service. 
	It provides capabilities for provisioning and 
	managing big data processing frameworks, such as 
	Hadoop, Spark, and Storm, enabling users to 
	perform data analysis and processing tasks in 
	OpenStack.




======================






======================




======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



======================


======================



